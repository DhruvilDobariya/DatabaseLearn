Why MySql:
Open Source
fast compare to other database because of partial indexing, fully-text indexing, unique memory chaching
More secure because of Secure Soket Layer SSL
Scallable


InnoDB:
row lavel locking
Foigen Constarins
above 5.5
indexing

MylSam:
table level locking
belove 5.5

CSV:
Archive:
Memory:
ndbcluster:
BlackHole:
Federared
MRG_MyISAM

Version:
below 4.1
heap memory storage
hash table create so fast retrive

5.7
JSON Supptot
InnoDB Improvements
Parformance improvement
Security imptovement

8.0
Data Diretory
Regular expression
Error logging
backup lock
Connection management
time zone management

ACID:
Atomicity: 0% or 100% transaction
Consistoncy: If A send and B recive money then cut in A and past in B, and befor a+b equals to after a+b
Isolation: during transaction, it is in isolation, don't affect other transaction.
Durability: Once trasiction is commit then it remain same even in system failer.

Normlization:
It is a process which imrove table' scallability, intigrity and storage efficiancy

1NF: Each cell contains single value
2NF: 1NF and Every non primary key attribute fully depended on primary key
3NF: 2NF and every non primary key atribute is not transitivly depends on primary key
BCNF: 3NF and every functional detrmine should me primary key. 
     => Ex: detarmine =>{detminastic1, determinastic2,...}
     => AccountNo => {Balance, Branch}
4NF: BCNF and have not multivalue dependancy
5NF: 4NF and can not have lossless decomposition
     => decompose joins and divide into parent child relationship 

DDL:
Create Database databasename;
Drop Database database name;

Create Table TableName( 
	column1name type,
	.
	.
	.
);
drop table tablename

Alter Table TableName
Rename To NewTableName

Alter Table TableName
Add Column ColumnName Type

Alter Table TableName
Modify Column ColumnName Type

Alter Table TableName
Drop Column ColumnName

Truncate Table TableName

DML:
Insert into TableName (column1, column2,...) values 
(Value1, Value 2...),
.
.
.;

Update TableName
Set 
ColumnName = Value,
.
.
.;

Delete form TableName

DCL:
Grant insert, select on studentdb to root
Revoke insert, select on studentdb from root

TCL:
Begin: start transection
Set Transaction [Read Write | Read only | Write Only]
Savepoint SvapointName
Rollback
Commit

DQL:
Select * From Student
Where Id In (1,5,7,10);

Select * from Student
Where Id Between 5 And 7;
-- Upper bound and lower bound include

Select * from Student
Where Id > 20 And Name = "Dhruvil";

Select * From Student
Where Id < 20 Or Name = "Dhruvil";

Select * From Student
Order By Name, Id;

Select * From Student
Order By Name, Id Desc;

Select * From Student
Limit 5;

Keys:

Id Int Auto_Increment
Primary Key(Id)
Unique (Id)
Foriegn Key(StudentId) Reference Student(StudentId)

Id int Auto_Increment
Constraint PK_User Primary Key(Id)
Constraint UK_User Unique (Id, Name, Email)
Constraint FK_User_Student Foriegn Key(StudentId)

Join:

Select * From Student
Inner Join on Collage
Collage.Id = Student.CollageId

Select * From Student
Left Join on Collage
Collage.Id = Student.CollageId

Select * From Student
Right Join on Collage
Collage.Id = Student.CollageId

Select * From Student
Full Joiun on Collage
Collage.Id = Student.CollageId

Union:

Select * From BCX
Union
Select * From BCY
-- Remove duplicate value

Select * From BCX
Union All
Select * From BCY
-- Don't Remove Duplicate Value

Aggregate Function:

Count
Sum
Min
Max
Avg

Select Collage, Count(StudentName) As StudentCount From Student
Group By Collage
Having StudentCount > 20;

Index:

Create Index IndexName
on TableName(ColumnName);

Alter Index Index Name
on TableName(ColumnName1, ColumnName2,...);

Show Inde from TableName;

Drop Index IndexName;

View:

Create View ViewName
As
Select Statement;

Alter View ViewName
As
Select Statement;

Rename Table ViewName
to NewViewName;

Select * From ViewName;

Drop View ViewName;





